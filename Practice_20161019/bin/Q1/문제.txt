KOSTA 전자 매장(가칭) 에서는 고객리스트와 보유하고 있는 가전제품 리스트를 보관하고 있다.
고객리스트는 고객들의 이름으로 구성되어 있으며, 가전제품 리스트는 제품번호와 제품번호에 맞는 가전제품으로 이뤄져 있다.
아래의 제약 조건에 따라, KOSTA 전자 매장에서 사용할 고객 및 제품관리 프로그램을 작성하시오.

-----------------------------------------------------------------------------------


[고객리스트 제약 조건]

1. 고객리스트의 클래스명은 'CustomerList' 로 명한다.
2. 고객리스트의 멤버변수는 List interface 한가지만 있으며, String 타입으로 Generic 선언된다.
(변수명은 'lists' 명한다)
3. 고객리스트의 멤버변수에 대한 setter 함수가 구현되어야 한다.
4. 고객리스트 클래스는 toString()을 오버라이드 한다.


[가전제품 리스트 제약 조건]

1. 가전제품리스트의 클래스명은 'ProductList' 로 명한다.
2. 가전제품리스트의 멤버변수는 Map interface 한가지만 있으며, key는 Integer 타입 / value는 String 타입으로
Generic 선언된다.(변수명은 'maps' 로 명한다)
3. 가전제품리스트의 멤버변수에 대한 setter 함수가 구현되어야 한다.
4. 가전제품리스트 클래스는 toString()을 오버라이드 한다.


[전자매장 제약 조건]

1. 전자매장의 클래스명은 'ElectronicStore' 로 명한다.
2. 전자매장의 멤버변수는 'ProductList' 와 'CustomerList' 2가지로 구성되어 있으며,
각각의 변수명은 'productlist' , 'customerlist' 로 명한다.
3. 전자매장의 멤버변수에 대한 setter 함수가 구현되어야 하며, 각각의 setter 함수는 @Autowired Annotation을 명시한다.
4. 전자매장 클래스는 toString()을 오버라이드 한다.


[메인프로그램 제약 조건]

1. 메인프로그램의 클래스명은 'App' 로 명한다.
2. 메인프로그램은 main 함수를 구현한다.
3. App 클래스에서는 ElectronicStore 클래스의 toString() 함수를 호출하는 역할을 한다.


[XML 파일 제약 조건]

1. 파일명은 'ApplicationContext' 로 명한다.
2. 고객리스트의 멤버필드를 초기화할 bean객체의 id는 'customerList' 로 명한다.
  - customerList 는 'list' 타입으로 멤버변수를 초기화 한다.
3. 가전제품 리스트의 멤버필드를 초기화할 bean객체의 id는 'productList' 로 명한다.
  - productList 는 'map' 타입으로 멤버변수를 초기화 한다.
  - 단, 키 값의 type은 int로 선언해 준다.(아니면 오류 발생)
4. 전자매장 멤버필드를 초기화할 bean 객체의 id는 'electronicStore' 로 명한다.
  - electronicStore에서는 Bean 객체 선언이외에 추가적으로 작성해야할 코드는 없다.

---------------------------------------------------------------------------------------

코드 실행 결과는 아래와 같아야 한다.

ElectronicStore
[productlist=ProductList [maps={1=컴퓨터, 2=노트북, 3=냉장고}]]
[customerlist=CustomerList [lists=[김유신, 홍길동, 유관순]]]