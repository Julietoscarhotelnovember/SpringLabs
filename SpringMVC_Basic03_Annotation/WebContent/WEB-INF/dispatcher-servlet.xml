<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">

<context:annotation-config></context:annotation-config>

<!-- 공통작업: 모든 컨트롤러가 공통으로 하는 작업 ex)resolver -->
<!-- ViewResolver 구현: view에 대한 설정담당 클래스 -->
<bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<property name="prefix">
		<value>/WEB-INF/view/</value>
	</property>
	<property name="suffix">
		<value>.jsp</value>
	</property>
</bean>

<!--
	test1 설정
	자동화를 위해서는 component-scan 선행해야 함
	<context:component-scan base-package="com.controller"></context:component-scan>
-->
<bean class="com.controller.HelloController"></bean>

<!-- test2 form의 get, post -->
<bean class="com.controller.NewArticleController"></bean>
<bean class="com.service.ArticleService"></bean>

<!-- test3 form의 get, post (list컬렉션 다루기)-->
<bean id="orderController" class="com.controller.OrderController"></bean>

<!-- test4 http전송 param 다루기 @RequestParam -->
<bean id="searchController" class="com.controller.SearchController"></bean>

<!-- test5 스프링쿠키 -->
<bean id="cookieController" class="com.controller.CookieController"></bean>

<!-- test6 @ModelAttribute -->
<bean id="codeController" class="com.controller.CodeSearchController"></bean>

<!-- test7 파일업로드, 이거 id값은 반드시 이래야 한다... 다른데서 써서 -->
<bean class="com.controller.ImageController"></bean>
<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<property name="maxUploadSize" value="10485760"></property>
</bean>



</beans> 