<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">
<!-- 
	MonitorViewer viewer=new MonitorViewer();
	viewer.setRecorder(new Recorder());
 -->
 
<!-- 1단계. 어노테이션 없이 xml설정 만으로
 	<bean id="viewer" class="DI_Annotation_01.MonitorViewer">
 		<property name="recorder">
 			<bean class="DI_Annotation_01.Recorder"></bean>
 		</property>
 	</bean> -->

<!-- 
	스프링 제공 annotation 중 @Autowired(자동 주입)
	목적: 의존관계를 자동설정할 때 사용하며, [타입]을 이용하여 의존하는 객체를 삽입해 준다.
	예외: 해당 타입의 빈객체가 존재하지 않거나 또는 2개 이상 존재할 경우 예외 발생
	설정 위치: 생성자, 필드, 메소드(굳이 setter메소드가 아니여도 된다)
	전제조건: IOC 컨테이너 안에 @Autowired 적용을위한 bean이 존재해야 한다 있어야 한다
	org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor 등록
	문제점: 10개의 어노테이션을 쓰려면 10개의 bean이 필요하다
	추가설정: AutowiredAnnotationBeanPostProcessor 클래스를 bean으로 등록시켜야 한다.
	해결: 해당 설정 대신에 <context:annotation-config> 태그를 사용해도 된다.
	옵션: required - @Autowired어노테이션을 적용한 프로퍼티에 대해 굳이 설정할 필요가 없는 경우에 false값을 주며 이때 해당 프로퍼티가 존재하지 않더라도 스프링은 예외를 발생시키지 않는다. 디폴트값은 true
 -->
 
<context:annotation-config></context:annotation-config>
<!-- 어노테이션을 사용하면 bean만 만든다 -->
 	<bean id="viewer" class="DI_Annotation_01.MonitorViewer"></bean>
 	<bean id="recorder" class="DI_Annotation_01.Recorder"></bean>

</beans>

<!-- 
	1.<context:annotation-config />
	어노테이션에 필요한 bean들 한번에 불러오기
	
	2.@Autowired 에러발생
	-주입되는 bean이 컨테이너 안에 없는 경우
	-주입되는 bean이 같은 타입이 있는 경우(id와 상관 없다)
	-2개가 필요하다면, 이름(id)으로 찾는 @Resource를 사용한다
	-autowire by type injection (세터에 대해서)
 -->